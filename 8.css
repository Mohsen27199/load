/*in graid : place content : center;*/
/* access to html element from css:
p
.itr
#id 
.iten . ine
. item+.item1 بعده بشكل مباشر بنفس المستوى 
hover for css :(id,class,element html )
direct child: .item>.item1 
many class for element class:" class1 class2" in css:  .class1.class2
div.active : in css every  div element have a class .active
access to element by attribute :[type] ||[type='submet']||[type*='submet']
[type^='sub']

access to element by first last child :
 p:first-child{}
p:first-of-type{}
div:last-child{}
div:last-of-type{}
p:only-child{}
p:only-of-type{}
p:nth-of-type(){}
p:nth-child(3)
p:nth-last-of-type(3)
nth: to access of number 

this and grid is very important
selector of zero :
https://elzero.org/css-assignments-lesson-from-78-to-82/
 

*/

/*anmation*/

.contener {
    margin: 20rem auto 0 auto;
    display: flex;
    width: 100px;
    height: 100px;

}

.load {
    /* margin: px auto; */
    width: 25px;
    height: 25px;
    border-radius: 50%;
    /* border: 5px solid rgb(224, 122, 122); */
    /* border-left-color: transparent; */
    background-color: #b66666;
    animation-name: loader;
    animation-duration: 1s;
    /* total time*/
    animation-iteration-count: infinite;
    /*for ever */
    /* animation-timing-function: linear; */
    animation-delay: 0s;
    /*start time*/

}

#l1 {
    animation-name: loader;
    background-color: rgb(25, 0, 255);
    animation-delay: 0s;

}

#l2 {
    animation-name: loader;
    background-color: rgb(255, 0, 0);
    animation-delay: 0.20s;

}

#l3 {
    animation-name: loader;
    background-color: rgb(166, 255, 0);
    animation-delay: 0.40s;

}

#l4 {
    animation-name: loader;
    background-color: rgb(0, 255, 0);
    animation-delay: 0.60s;

}

#l5 {
    animation-name: loader;
    background-color: rgb(231, 197, 0);
    animation-delay: 0.8s;

}

@keyframes loader {
    0% {
        transform: translate(0px, 0px);

    }

    50% {
        transform: translate(0px, -100px);
    }

    100% {
        transform: translate(0px, 0px);


    }
}

/* * {
    margin: 0px;
    /* padding: 0px; 
    box-sizing: border-box;
} */